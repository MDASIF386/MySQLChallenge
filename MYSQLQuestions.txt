SQL Question DAY1️⃣:
------------------------------
PROBLEM STATEMENT
Employee_8 Table has four columns namely EmpID EmpName, Salary and DeptID
Write a SQL to find all Employee_8s who earn more than the average salary in their corresponding department.
------------------------------


-------------------------------------------------------------------------
Table and Insert SQL Script :
-------------------------------------------------------------------------
CREATE Table Employee_8
(
EmpID INT,
EmpName Varchar(30),
Salary Float,
DeptID INT
);

INSERT INTO Employee_8 VALUES(1001,'Mark',60000,2);
INSERT INTO Employee_8 VALUES(1002,'Antony',40000,2);
INSERT INTO Employee_8 VALUES(1003,'Andrew',15000,1);
INSERT INTO Employee_8 VALUES(1004,'Peter',35000,1);
INSERT INTO Employee_8 VALUES(1005,'John',55000,1);
INSERT INTO Employee_8 VALUES(1006,'Albert',25000,3);
INSERT INTO Employee_8 VALUES(1007,'Donald',35000,3);

------------------------------
input table
------------------------------
+-------+---------+--------+--------+
| EmpID | EmpName | Salary | DeptID |
+-------+---------+--------+--------+
| 1001 | Mark | 60000 | 2 |
| 1002 | Antony | 40000 | 2 |
| 1003 | Andrew | 15000 | 1 |
| 1004 | Peter | 35000 | 1 |
| 1005 | John | 55000 | 1 |
| 1006 | Albert | 25000 | 3 |
| 1007 | Donald | 35000 | 3 |
+-------+---------+--------+--------+

------------------------------
Expected OUTPUT
------------------------------
+---------+--------+--------+
| EmpName | DeptID | Salary |
+---------+--------+--------+
| Mark | 2 | 60000 |
| John | 1 | 55000 |
| Donald | 3 | 35000 |
+---------+--------+--------+

------------------------------
solution
------------------------------
------------------------------
Method 1
------------------------------
with cte as
(
select
avg(Salary) as AV,
DeptID
from
Employee_8
group by DeptID
)
select E.EmpName,
E.DeptID,
E.Salary
from
Employee_8 E
join
cte C on E.DeptID=C.DeptID
where E.Salary>AV;

------------------------------
Method 2:
------------------------------
Select EmpName, DeptID, Salary from (select EmpID, EmpName, DeptID, Salary, AVG(Salary) over (Partition By DeptID) avs from Employee_8 order by DeptID) where Salary>avs order by Salary desc;

------------------------------
End
------------------------------

Tool Used: MYSQL

#sql #database #dataanalyst #practices
#data #technology #learning #interview
#dataengineering #dataanalytics #scenario
#sqlqueries #learningeveryday #day1



SQL Question DAY2️⃣:
------------------------------
PROBLEM STATEMENT
Employee_8 Table has four columns namely EmpID EmpName, Salary and DeptID
Write a SQL to find all Employee_8s who earn maximum salary in their respective department.
------------------------------


-------------------------------------------------------------------------
Table and Insert SQL Script :
-------------------------------------------------------------------------
CREATE Table Employee_8
(
EmpID INT,
EmpName Varchar(30),
Salary Float,
DeptID INT
);

INSERT INTO Employee_8 VALUES(1001,'Mark',60000,2);
INSERT INTO Employee_8 VALUES(1002,'Antony',40000,2);
INSERT INTO Employee_8 VALUES(1003,'Andrew',15000,1);
INSERT INTO Employee_8 VALUES(1004,'Peter',35000,1);
INSERT INTO Employee_8 VALUES(1005,'John',55000,1);
INSERT INTO Employee_8 VALUES(1006,'Albert',25000,3);
INSERT INTO Employee_8 VALUES(1007,'Donald',35000,3);

------------------------------
input table
------------------------------
+-------+---------+--------+--------+
| EmpID | EmpName | Salary | DeptID |
+-------+---------+--------+--------+
| 1001 | Mark | 60000 | 2 |
| 1002 | Antony | 40000 | 2 |
| 1003 | Andrew | 15000 | 1 |
| 1004 | Peter | 35000 | 1 |
| 1005 | John | 55000 | 1 |
| 1006 | Albert | 25000 | 3 |
| 1007 | Donald | 35000 | 3 |
+-------+---------+--------+--------+

------------------------------
Expected OUTPUT
------------------------------
+---------+--------+--------+
| EmpName | DeptID | Salary |
+---------+--------+--------+
| Mark | 2 | 60000 |
| John | 1 | 55000 |
| Donald | 3 | 35000 |
+---------+--------+--------+

------------------------------
solution
------------------------------
------------------------------
Method 1
------------------------------
select EmpName, DeptID, Salary from
(select EmpID, EmpName, Salary, DeptID, row_number() over(Partition By DeptID order by salary desc) as rown
from Employee_8)where rown=1 order by salary desc;

------------------------------
Method 2:
------------------------------
SELECT EmpName, e.DeptID, Salary
FROM Employee_8 e
JOIN (
  SELECT DeptID, MAX(Salary) AS MaxSalary
  FROM Employee_8
  GROUP BY DeptID
) max_salaries
ON e.DeptID = max_salaries.DeptID AND e.Salary = max_salaries.MaxSalary;



SQL Question DAY 5️⃣  : 



PROBLEM STATEMENT:

Transatcion_Tbl_1 Table has four columns CustID, TranID, TranAmt, and TranDate. User has to display all these fields along with maximum TranAmt for each CustID and ratio of TranAmt and maximum TranAmt for each transaction.

 -----------------

Outcome:

 ------------------------------

 Create insert query 

 ------------------------------

CREATE TABLE sql_question.Transaction_Tbl_1 

(

 CustID int ,

 TranID int ,

 TranAmt float ,

 TranDate date 

) ;



INSERT into Transaction_Tbl_1 VALUES (1001, 20001, 10000, CAST('2020-04-25' AS Date));

INSERT into Transaction_Tbl_1 VALUES (1001, 20002, 15000, CAST('2020-04-25' AS Date));

INSERT into Transaction_Tbl_1 VALUES (1001, 20003, 80000, CAST('2020-04-25' AS Date));

INSERT into Transaction_Tbl_1 VALUES (1001, 20004, 20000, CAST('2020-04-25' AS Date));

INSERT into Transaction_Tbl_1 VALUES (1002, 30001, 7000, CAST('2020-04-25' AS Date));

INSERT into Transaction_Tbl_1 VALUES (1002, 30002, 15000, CAST('2020-04-25' AS Date));

INSERT into Transaction_Tbl_1 VALUES (1002, 30003, 22000, CAST('2020-04-25' AS Date));



+--------+--------+---------+------------+

| CustID | TranID | TranAmt | TranDate |

+--------+--------+---------+------------+

| 1001 | 20001 | 10000 | 2020-04-25 |

| 1001 | 20002 | 15000 | 2020-04-25 |

| 1001 | 20003 | 80000 | 2020-04-25 |

| 1001 | 20004 | 20000 | 2020-04-25 |

| 1002 | 30001 | 7000 | 2020-04-25 |

| 1002 | 30002 | 15000 | 2020-04-25 |

| 1002 | 30003 | 22000 | 2020-04-25 |

+--------+--------+---------+------------+

Expected output :

+--------+--------+---------+------------+-----------------+-------------------------+

| CustID | TranID | TranAmt | TranDate | maximum_TranAmt | TranAmt/maximum_TranAmt |

+--------+--------+---------+------------+-----------------+-------------------------+

| 1001 | 20001 | 10000 | 2020-04-25 | 80000 | 0.125 |

| 1001 | 20002 | 15000 | 2020-04-25 | 80000 | 0.1875 |

| 1001 | 20003 | 80000 | 2020-04-25 | 80000 | 1 |

| 1001 | 20004 | 20000 | 2020-04-25 | 80000 | 0.25 |

| 1002 | 30001 | 7000 | 2020-04-25 | 22000 | 0.3181818181818182 |

| 1002 | 30002 | 15000 | 2020-04-25 | 22000 | 0.6818181818181818 |

| 1002 | 30003 | 22000 | 2020-04-25 | 22000 | 1 |

+--------+--------+---------+------------+-----------------+-------------------------+



Solution:

SELECT 

  CustID, 

  TranID, 

  TranAmt, 

  TranDate, 

  maximum_TranAmt, 

  (TranAmt / maximum_TranAmt) AS TranAmt_Ratio

FROM 

  (SELECT 

    CustID, 

    TranID, 

    TranAmt, 

    TranDate, 

    MAX(TranAmt) OVER (PARTITION BY CustID ORDER BY CustID) AS maximum_TranAmt 

  FROM 

    Transaction_Tbl_1) AS temp
    

    #data